version: '3'

services:
  client-app:
    build:
      ./frontend
    labels:
      - "traefik.backend=client-app"
      - "traefik.frontend.rule=Host:localhost;PathPrefix:/"
    networks:
      - webgateway

  prefixed_api:
    build:
      ./api
    labels:
      - "traefik.backend=prefixed_api"
      - "traefik.frontend.rule=Host:api.localhost;AddPrefix:/api"
    networks:
      - webgateway
      - db_nw
    env_file:
      - ./api/.env
    depends_on:
      - postgres

  whoami:
    image: emilevauge/whoami
    networks:
      - webgateway
    labels:
      - "traefik.backend=whoami"
      - "traefik.frontend.rule=Host:whoami.localhost;PathPrefix:/"
    restart:
      always

  proxy:
    image: traefik
    command: --web --docker --docker.domain=localhost --logLevel=INFO
    networks:
      - webgateway
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml
    restart:
      always
    labels:
      # Don't manage this in traefik
      - "traefik.enable=false"

  postgres:
    restart: always
    image: postgres:10
    env_file:
      - postgres.env
    volumes:
      - ./postgres-data/postgres:/var/lib/postgresql/data
    networks:
      - db_nw
    labels:
      # Don't manage this in traefik
      - "traefik.enable=false"
    ports:
      - 5432:5432

networks:
  webgateway:
    driver: bridge
  db_nw:
    driver: bridge
